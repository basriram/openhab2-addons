/**
 * /**
 *  * Copyright (c) 2010-2019 Contributors to the openHAB project
 *  *
 *  * See the NOTICE file(s) distributed with this work for additional
 *  * information.
 *  *
 *  * This program and the accompanying materials are made available under the
 *  * terms of the Eclipse Public License 2.0 which is available at
 *  * http://www.eclipse.org/legal/epl-2.0
 *  *
 *  * SPDX-License-Identifier: EPL-2.0
 *  *
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DeviceMessage.proto.json

package org.openhab.binding.eufysecurity.internal.api.model.generated;

/**
 * Protobuf enum {@code org.openhab.binding.eufysecurity.internal.api.model.generated.RTVideoStreamType}
 */
public enum RTVideoStreamType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>RTVIDEO_STREAM_UNKNOWN_VALUE = 0;</code>
   */
  RTVIDEO_STREAM_UNKNOWN_VALUE(0),
  /**
   * <code>RTVIDEO_STREAM_RMTP_VALUE = 1;</code>
   */
  RTVIDEO_STREAM_RMTP_VALUE(1),
  /**
   * <code>RTVIDEO_STREAM_RTSP_VALUE = 2;</code>
   */
  RTVIDEO_STREAM_RTSP_VALUE(2),
  /**
   * <code>RTVIDEO_STREAM_HLS_VALUE = 3;</code>
   */
  RTVIDEO_STREAM_HLS_VALUE(3),
  /**
   * <code>RTVIDEO_STREAM_FLV_VALUE = 4;</code>
   */
  RTVIDEO_STREAM_FLV_VALUE(4),
  /**
   * <code>RTVIDEO_STREAM_RTSPTLS_VALUE = 5;</code>
   */
  RTVIDEO_STREAM_RTSPTLS_VALUE(5),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>RTVIDEO_STREAM_UNKNOWN_VALUE = 0;</code>
   */
  public static final int RTVIDEO_STREAM_UNKNOWN_VALUE_VALUE = 0;
  /**
   * <code>RTVIDEO_STREAM_RMTP_VALUE = 1;</code>
   */
  public static final int RTVIDEO_STREAM_RMTP_VALUE_VALUE = 1;
  /**
   * <code>RTVIDEO_STREAM_RTSP_VALUE = 2;</code>
   */
  public static final int RTVIDEO_STREAM_RTSP_VALUE_VALUE = 2;
  /**
   * <code>RTVIDEO_STREAM_HLS_VALUE = 3;</code>
   */
  public static final int RTVIDEO_STREAM_HLS_VALUE_VALUE = 3;
  /**
   * <code>RTVIDEO_STREAM_FLV_VALUE = 4;</code>
   */
  public static final int RTVIDEO_STREAM_FLV_VALUE_VALUE = 4;
  /**
   * <code>RTVIDEO_STREAM_RTSPTLS_VALUE = 5;</code>
   */
  public static final int RTVIDEO_STREAM_RTSPTLS_VALUE_VALUE = 5;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static RTVideoStreamType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static RTVideoStreamType forNumber(int value) {
    switch (value) {
      case 0: return RTVIDEO_STREAM_UNKNOWN_VALUE;
      case 1: return RTVIDEO_STREAM_RMTP_VALUE;
      case 2: return RTVIDEO_STREAM_RTSP_VALUE;
      case 3: return RTVIDEO_STREAM_HLS_VALUE;
      case 4: return RTVIDEO_STREAM_FLV_VALUE;
      case 5: return RTVIDEO_STREAM_RTSPTLS_VALUE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<RTVideoStreamType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      RTVideoStreamType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<RTVideoStreamType>() {
          public RTVideoStreamType findValueByNumber(int number) {
            return RTVideoStreamType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return org.openhab.binding.eufysecurity.internal.api.model.generated.DeviceMessageProtoJson.getDescriptor().getEnumTypes().get(5);
  }

  private static final RTVideoStreamType[] VALUES = values();

  public static RTVideoStreamType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private RTVideoStreamType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:org.openhab.binding.eufysecurity.internal.api.model.generated.RTVideoStreamType)
}

